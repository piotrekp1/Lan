let silnia :: Int -> Int;
let silnia_2 :: Int -> Int;
let t :: Int;
let t1 :: Int; 
let t2 :: Int;
let eval :: (Int -> Int) -> Int;
silnia x := if x == 1 then 1 else x * (silnia x - 1);
silnia_2 x := (silnia x) / 2;
eval foo := foo 3;
let abcd :: Int -> Int -> Int;
let abc :: Int -> Int;
let ab :: Int;
abcd a b := a + b;
{
    abc = abcd 3;
    ab = abc 2;
    t = silnia 3;
    t1 = silnia_2 3;
    t2 = eval silnia_2;
}